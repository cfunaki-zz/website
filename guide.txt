### Setting up the virtualenv and server ###
$ mkdir mysite
$ cd mysite
$ C:\Users\Chris\Python34\python -m venv myvenv
$ myvenv\Scripts\activate
$ pip install django==1.8
$ pip install django psycopg2
$ django-admin startproject myproject .
# Change settings.py for database
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'nba',
        'USER': 'cfunaki',
        'PASSWORD': 'takahiro',
        'HOST': 'chrisdb.c3eshiiziffu.us-west-2.rds.amazonaws.com',
        'PORT': '5432',

$ python manage.py syncdb
$ python manage.py makemigrations
$ python manage.py migrate
$ python manage.py createsuperuser
$ python manage.py runserver 0.0.0.0:8000

$ python manage.py startapp myapp
# Add app to settings.py
# Create models in models.py
# Migrate changes to database

# Import data
psql --host=chrisdb.c3eshiiziffu.us-west-2.rds.amazonaws.com --port=5432 --username=cfunaki --password --dbname=nba_shots
\copy teams_agg from 'C:/Users/Chris/Documents/shot_data/teams_agg.csv' delimiter '|' csv;
\copy players_agg from 'C:/Users/Chris/Documents/shot_data/players_agg.csv' delimiter '|' csv;

#NBA API
http://stats.nba.com/stats/playerdashptshotlog?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&Month=0&OpponentTeamID=0&Outcome=&Period=0&PlayerID=201939&Season=2015-16&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=

# Using the Python API
$ python manage.py shell
$ from shot_chart.models import Team, Player, Shot
$ Team.objects.get(team_id=2)
$ Team.objects.filter(team_id=2)

Starting git
$ git init
$ git config --global user.name "cfunaki"
$ git config --global user.email cfunaki11@gmail.com
$ git status

Updating git
$ git status
$ git add -A.
$ git status
$ git commit -m "Description"
$ git push

PythonAnywhere
$ rm -rf folder_name
$ git clone https://github.com/cfunaki/cfunaki-site.git
$ cd cfunaki-site
$ virtualenv --python=python3.4 myvenv
$ source myvenv/bin/activate
$ pip install django whitenoise psycopg2 djangorestframework
$ mkdir static
$ python manage.py collectstatic

$ git reset --hard HEAD
$ git pull
$ python manage.py collectstatic

Bootstrap
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css">

html template -> urls -> views -> template

PostgreSQL
psql -U postgres
# CREATE USER cfunaki;
# CREATE DATABASE db OWNER cfunaki;